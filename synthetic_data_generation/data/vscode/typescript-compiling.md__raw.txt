Question: What tool is used to transpile TypeScript to JavaScript?
Answer: The TypeScript compiler (`tsc`) is used to transpile TypeScript to JavaScript.

Question: How can you check the version of TypeScript installed on your computer?
Answer: You can check the version of TypeScript installed on your computer by running `tsc --version` in a terminal.

Question: What is the purpose of a `tsconfig.json` file in TypeScript projects?
Answer: A `tsconfig.json` file defines the TypeScript project settings, such as compiler options and the files that should be included.

Question: What is the format of a simple `tsconfig.json` file for ES5 CommonJS modules and source maps?
Answer: A simple `tsconfig.json` file for ES5 CommonJS modules and source maps would look like this:
```json
{
    "compilerOptions": {
        "target": "ES5",
        "module": "CommonJS",
        "sourceMap": true
    }
}
```
Question: How can you execute the TypeScript build task in VS Code?
Answer: You can execute the TypeScript build task in VS Code by selecting **Run Build Task** (`kb(workbench.action.tasks.build)`) from the global **Terminal** menu and selecting the `tsc: build` entry.

Question: What happens when you run a program using VS Code's Run/Debug feature?
Answer: Details about running and debugging Node.js applications in VS Code can be found in the Node.js tutorial.

Question: What is the role of problem matchers in the VS Code task system?
Answer: Problem matchers parse build output based on the specific build tool and provide integrated issue display and navigation.


Question: What affects the TypeScript version VS Code uses?
Answer: The TypeScript version VS Code uses is affected by the version installed globally on your computer and the version installed locally in your workspace.

Question: How can you make VS Code use a specific TypeScript version in a workspace?
Answer: You can make VS Code use a specific TypeScript version in a workspace by adding a `typescript.tsdk` workspace setting pointing to the directory of the `tsserver.js` file.

Question: What does the `typescript.tsdk` setting control?
Answer: The `typescript.tsdk` setting controls which TypeScript version VS Code uses in a workspace.

Question: How does VS Code detect workspace versions of TypeScript?
Answer: VS Code detects workspace versions of TypeScript that are installed under `node_modules` in the root of your workspace.

Question: How can you explicitly specify a TypeScript version in VS Code settings?
Answer: You can explicitly specify a TypeScript version in VS Code settings by configuring the `typescript.tsdk` in your user or workspace settings.

Question: Which TypeScript version should be installed for VS Code?
Answer: A separate version of TypeScript should be installed from npm for VS Code.

Question: Why are code style issues not reported as errors in VS Code TypeScript?
Answer: By default, VS Code TypeScript displays code style issues as warnings instead of errors.

Question: Which code style issues are reported as warnings in VS Code TypeScript?
Answer: Variable is declared but never used, Property is declared but its value is never read, Unreachable code detected, Unused label, Fall through case in switch, Not all code paths return a value.

Question: How to disable code style issues as warnings in VS Code TypeScript?
Answer: By setting "typescript.reportStyleChecksAsWarnings": false in User settings.

Question: Will code style issues be displayed as errors when running tsc from command line?
Answer: Yes, they will still be displayed as errors when running tsc from the command line.

