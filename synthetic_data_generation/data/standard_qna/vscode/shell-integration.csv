What is the purpose of terminal shell integration in Visual Studio Code?,"The purpose of terminal shell integration in Visual Studio Code is to enable the terminal to understand more about what's happening inside the shell, providing additional features such as working directory detection, command decorations, navigation, and sticky scroll."
How can you disable automatic injection of the shell integration script in Visual Studio Code?,You can disable automatic injection of the shell integration script in Visual Studio Code by setting `terminal.integrated.shellIntegration.enabled` to `false`.
Which shells are supported for shell integration in Visual Studio Code on Linux/macOS?,"The supported shells for shell integration in Visual Studio Code on Linux/macOS are bash, fish, pwsh, and zsh."
What is the recommended way to enable shell integration for advanced use cases in Visual Studio Code?,The recommended way to enable shell integration for advanced use cases in Visual Studio Code is through manual installation.
What do the decorations added to the terminal indicate in Visual Studio Code?,"The decorations added to the terminal in Visual Studio Code indicate whether the command succeeded or failed, and they can be interacted with to give some contextual actions like re-running the command."
What is the sticky scroll feature in VS Code terminal?,"The sticky scroll feature in VS Code terminal will ""stick"" the command that is partially showing at the top of the terminal, making it easier to see which output belongs to which command."
How can the Quick Fix feature be enabled in VS Code terminal?,The Quick Fix feature can be enabled with the `terminal.integrated.stickyScroll.enabled` setting in VS Code.
What are some of the built-in Quick Fixes in VS Code terminal?,"Some of the built-in Quick Fixes in VS Code terminal include suggesting to kill a process and re-run the previous command, pushing with the upstream set, using similar commands, opening a GitHub PR link, and suggesting each suggestion for PowerShell feedback providers."
"What does the ""Terminal: Run Recent Command"" command do in VS Code terminal?","The ""Terminal: Run Recent Command"" command surfaces history from various sources in a Quick Pick, providing similar functionality to a shell's reverse search."
"What is the default keybinding for the ""Terminal: Go to Recent Directory"" command in VS Code terminal?","The default keybinding for the ""Terminal: Go to Recent Directory"" command is `kb(workbench.action.terminal.goToRecentDirectory)`."
What is the default action for `kbstyle(Ctrl+Space)` in VS Code?,The default action for `kbstyle(Ctrl+Space)` in VS Code is `MenuComplete` on Windows only.
What is the default action for `kbstyle(Alt+Space)` in VS Code?,The default action for `kbstyle(Alt+Space)` in VS Code is `SetMark` on all platforms.
What is the default action for `kbstyle(Shift+Enter)` in VS Code?,The default action for `kbstyle(Shift+Enter)` in VS Code is `AddLine` on all platforms.
What is the default action for `kbstyle(Shift+End)` in VS Code?,The default action for `kbstyle(Shift+End)` in VS Code is `SelectLine` on all platforms.
What is the default action for `kbstyle(Shift+Home)` in VS Code?,The default action for `kbstyle(Shift+Home)` in VS Code is `SelectBackwardsLine` on all platforms.
Why does command decoration move after a command runs on Windows?,"This is due to the use of an emulated pseudoterminal (pty) backend called ConPTY, which handles rendering differently to maintain compatibility with the Windows Console API. After a command runs, the shell integration sequences that identify the commands in the terminal buffer may be misplaced, causing the command decoration to move."
What maintains compatibility for the terminal on Windows?,"ConPTY, an emulated pseudoterminal (pty) backend, maintains compatibility for the terminal on Windows by working differently than a regular pty and handling rendering in a special way."
What feature is lost when removing the shell integration script?,Command-aware features like command navigation will be lost when removing the shell integration script from the shell rc/startup script.
"What is the effect of the ""terminal.integrated.shellIntegration.decorationsEnabled"": never setting?","This setting disables command decorations in the integrated terminal, meaning command-aware features like command navigation will not be available."
What causes the pty to handle rendering differently on Windows?,"The pty handles rendering differently on Windows due to the use of an emulated pseudoterminal (pty) backend called ConPTY, which is designed to maintain compatibility with the Windows Console API."
